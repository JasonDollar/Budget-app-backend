{"version":3,"sources":["store/actions/actionTypes.ts","config/config.ts","store/actions/ui.ts","store/actions/expenses.ts","lib/setAuthToken.ts","store/actions/user.ts","store/selectors/user.ts","hooks/useIsUserLogged.ts","components/styles/AuthForm.ts","store/selectors/ui.ts","components/Register.tsx","pages/register.tsx","components/Login.tsx","pages/login.tsx","components/styles/BigButton.ts","components/ErrorMessage.tsx","components/ExpenseForm.tsx","components/styles/PageName.tsx","pages/addExpense.tsx","lib/expenseFilter.ts","store/selectors/expenses.ts","components/styles/Loading.ts","pages/editExpense.tsx","lib/formatMoney.ts","components/ExpenseListItem.tsx","components/styles/List.ts","components/ExpensesList.tsx","components/Filter.tsx","pages/expenses.tsx","components/Expense.tsx","pages/expense.tsx","components/styles/theme.ts","components/UserSetings/CategoriesSettings.tsx","components/UserSetings/CurrencySettings.tsx","components/UserSetings/ThemeSettings.tsx","components/UserSetings/UserSettings.tsx","components/User.tsx","pages/user.tsx","lib/isEmail.ts","components/ResetPassword.tsx","pages/resetPassword.tsx","components/NotificationItem.tsx","components/Notifications.tsx","components/styles/globalStyles.ts","components/styles/Nav.ts","components/Nav.tsx","components/styles/Header.ts","components/Header.tsx","components/styles/TotalBox.ts","components/Total.tsx","lib/calcMoney.ts","App.tsx","reportWebVitals.js","store/reducers/expenses.ts","store/reducers/user.ts","store/reducers/ui.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["EActionTypes","availableCurrencies","baseUrl","apiCallsNames","apiCallStart","name","type","API_CALL_START","payload","apiCallFinishSuccess","message","API_CALL_FINISH_SUCCESS","successMessage","apiCallFinishFail","error","API_CALL_FINISH_FAIL","clearApiCall","CLEAR_API_CALL","showNotification","dispatch","id","Math","random","toString","substring","ADD_NOTIFICATION","addNotification","setTimeout","dismissNotification","REMOVE_NOTIFICATION","setExpensesToStore","expenses","SET_EXPENSES","clearExpenses","CLEAR_EXPENSES","setExpenses","a","api","axios","get","res","statusText","data","console","log","addExpenseToStore","expense","ADD_EXPENSE","addExpense","expenseData","uiAction","history","notification","post","push","response","removeExpenseFromStore","REMOVE_EXPENSE","editExpense","updates","patch","EDIT_EXPENSE","setAuthToken","token","defaults","headers","common","setUserToStore","userData","SET_USER_DATA","clearUser","CLEAR_USER","changeCurrencyInStore","newCurrency","CHANGE_CURRENCY","changeCategoriesInStore","categories","CHANGE_CATEGORIES","loginUser","email","password","user","localStorage","setItem","registerUser","passwordConfirm","resetUserPassword","selectUserData","createSelector","state","selectUserSettings","settings","selectUserCategories","selectUserId","_id","useIsUserLogged","useSelector","AuthForm","styled","div","props","theme","mainThemeColor","selectUi","ui","selectApiCalls","apiCalls","selectSingleApiCall","eventName","find","item","selectFilters","filter","selectNotifications","notifications","Register","useDispatch","useHistory","useState","setName","setEmail","setPassword","setPasswordConfirm","loading","userLogged","useEffect","formSubmitHandler","e","preventDefault","to","onSubmit","className","htmlFor","onChange","target","value","disabled","RegisterPage","Login","errorData","onClick","LoginPage","ButtonsContainer","buttons","BigButton","button","fontSize","danger","colorDanger","alert","colorAlert","textColorInverted","boxShadow","wide","ErrorMessage","Object","values","length","FormContainer","ExpenseForm","expenseId","titleExpense","descriptionExpense","amountExpense","handleSubmit","dateExpense","categoryExpense","apiCallState","title","setTitle","description","setDescription","amount","setAmount","Date","expenseDate","setExpenseDate","category","setCategory","formHandler","placeholder","required","toLowerCase","parsedAmount","floor","Number","handleAmountChange","step","date","clearIcon","minDetail","format","map","PageName","children","style","fontWeight","letterSpacing","marginBottom","AddExpensePage","saveNewExpenseApiState","addExpenseHandler","validAmount","expenseFilter","search","dateRangeStart","dateRangeEnd","sortBy","sortDirection","textMatch","includes","categoryMatch","dateMatchStart","dateMatchEnd","isAfter","isBefore","sort","b","sortExpression","selectAllExpenses","filters","selectSingleExpense","round","keyframes","load","Loading","EditExpense","useParams","saveEditExpenseApiState","editExpenseHandler","ceil","formatMoney","currency","locale","options","minimumFractionDigits","formatter","Intl","NumberFormat","ListItem","li","boxShadowColor","textGreyColor","ExpenseListItem","memo","List","ul","ExpensesList","expensesApi","Filter","handleChange","update","UPDATE_FILTER","currentDirection","ExpensesPage","ExpenseContainer","Expense","delete","removeExpense","ExpensePage","violet","textColor","textColorWhite","backgroundColor","pumpkin","sea","blue","red","ListElement","CategoriesSettings","CurrencySettings","userCurrency","setCurrency","saveCurrencyApiState","ThemeColor","chosenColor","backColor","ThemeSettings","themes","themeId","changeAppTheme","mainColor","SettingContainer","UserSettings","UserContainer","User","removeItem","logoutUser","isEmail","test","ResetPassword","formSubmitResetHandler","ResetPasswordPage","ItemDiv","width","NotificationItem","notificationId","setWidth","timer","setInterval","clearInterval","NotificationBox","Notifications","GlobalStyle","createGlobalStyle","NavList","Backdrop","isOpen","Nav","toggleNavOpen","handleLinkClick","HeaderBox","bottomAdditionalSpace","Header","totalComponentHeight","navOpen","handleNavToggling","TotalBox","boxSize","totalAmountLength","Total","setTotalComponentHeight","totalAmount","setTotalAmount","todayAmount","setTodayAmount","boxRef","useRef","totalAmountCalc","reduce","acc","calculateTotal","todayExpense","isToday","calculateTodayExpenses","current","clientHeight","ref","App","setFirstLoading","themeIdFromLS","getItem","changeThemeId","getJwtFromLS","decoded","jwt_decode","getTheme","path","exact","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","owner","createdAt","updatedAt","__v","expenseReducer","action","filteredExpenses","mappedExpenses","userReducer","uiReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa81fcbf.chunk.js","sourcesContent":["export const SET_EXPENSES = 'SET_EXPENSES'\r\nexport const ADD_EXPENSE = 'ADD_EXPENSE'\r\nexport const EDIT_EXPENSE = 'EDIT_EXPENSE'\r\nexport const REMOVE_EXPENSE = 'REMOVE_EXPENSE'\r\nexport const LOADING_EXPENSE_START = 'LOADING_EXPENSE_START'\r\nexport const CLEAR_EXPENSES = 'CLEAR_EXPENSES'\r\n\r\nexport const LOADING_USER_START = 'LOADING_USER_START'\r\nexport const SET_USER_DATA = 'SET_USER_DATA'\r\nexport const CLEAR_USER = 'CLEAR_USER'\r\nexport const CHANGE_CURRENCY = 'CHANGE_CURRENCY'\r\nexport const CHANGE_CATEGORIES = 'CHANGE_CATEGORIES'\r\n\r\nexport const API_CALL_START = 'API_CALL_START'\r\nexport const API_CALL_FINISH_SUCCESS = 'API_CALL_FINISH_SUCCESS'\r\nexport const API_CALL_FINISH_FAIL = 'API_CALL_FINISH_FAIL'\r\nexport const UPDATE_FILTER = 'UPDATE_FILTER'\r\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION'\r\nexport const REMOVE_NOTIFICATION = 'REMOVE_NOTIFICATION'\r\n\r\nexport enum EActionTypes {\r\n  SET_EXPENSES = 'SET_EXPENSES',\r\n  ADD_EXPENSE = 'ADD_EXPENSE',\r\n  EDIT_EXPENSE = 'EDIT_EXPENSE',\r\n  REMOVE_EXPENSE = 'REMOVE_EXPENSE',\r\n  LOADING_EXPENSE_START = 'LOADING_EXPENSE_START',\r\n  CLEAR_EXPENSES = 'CLEAR_EXPENSES',\r\n\r\n  LOADING_USER_START = 'LOADING_USER_START',\r\n  SET_USER_DATA = 'SET_USER_DATA',\r\n  CLEAR_USER = 'CLEAR_USER',\r\n  CHANGE_CURRENCY = 'CHANGE_CURRENCY',\r\n  CHANGE_CATEGORIES = 'CHANGE_CATEGORIES',\r\n\r\n  API_CALL_START = 'API_CALL_START',\r\n  API_CALL_FINISH_SUCCESS = 'API_CALL_FINISH_SUCCESS',\r\n  API_CALL_FINISH_FAIL = 'API_CALL_FINISH_FAIL',\r\n  CLEAR_API_CALL = 'CLEAR_API_CALL',\r\n  UPDATE_FILTER = 'UPDATE_FILTER',\r\n  ADD_NOTIFICATION = 'ADD_NOTIFICATION',\r\n  REMOVE_NOTIFICATION = 'REMOVE_NOTIFICATION',\r\n}","export const availableCurrencies = ['USD', 'EUR', 'PLN', 'GBP']\r\n\r\nexport const baseUrl = '/api/v1'\r\n\r\nexport const apiCallsNames = {\r\n  saveNewExpense: 'save-new-expense',\r\n  saveEditExpense: 'save-edit-expense',\r\n  removeExpense: 'remove-expense',\r\n  saveCurrency: 'save-currency',\r\n  removeCategory: 'remove-category',\r\n  fetchExpenses: 'FETCH_EXPENSES',\r\n  fetchUser: 'FETCH_USER',\r\n  loginUser: 'LOGIN_USER',\r\n  registerUser: 'REGISTER_USER',\r\n  logoutUser: 'LOGOUT_USER',\r\n  resetPassword: 'RESET_PASSWORD',\r\n}","import { TAction } from './interface'\r\nimport { EActionTypes } from './actionTypes'\r\nimport { Dispatch } from 'redux'\r\n\r\nexport const apiCallStart = (name: string): TAction => ({\r\n  type: EActionTypes.API_CALL_START,\r\n  payload : { name }\r\n})\r\n\r\nexport const apiCallFinishSuccess = (name: string, message?: string): TAction => ({\r\n  type: EActionTypes.API_CALL_FINISH_SUCCESS,\r\n  payload : { name, successMessage: message }\r\n})\r\n\r\nexport const apiCallFinishFail = (name: string, error: any): TAction => ({\r\n  type: EActionTypes.API_CALL_FINISH_FAIL,\r\n  payload : { name, error }\r\n})\r\n\r\nexport const clearApiCall = (name: string): TAction => ({\r\n  type: EActionTypes.CLEAR_API_CALL,\r\n  payload : { name }\r\n})\r\n\r\nexport const updateFilter = (updates: any): TAction => ({\r\n  type: EActionTypes.UPDATE_FILTER,\r\n  payload: updates\r\n})\r\n\r\nconst addNotification = ({ id, message }: { id: string, message: string }): TAction => ({\r\n  type: EActionTypes.ADD_NOTIFICATION,\r\n  payload: { id, message }\r\n})\r\n\r\nexport const showNotification = (message: string) => (dispatch: Dispatch<TAction>) => {\r\n  const id = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\r\n  dispatch(addNotification({\r\n      id,\r\n      message\r\n    })\r\n  )\r\n  setTimeout(() => {\r\n    dispatch(dismissNotification(id))\r\n  }, 4000)\r\n}\r\n\r\nexport const dismissNotification = (id: string): TAction => ({\r\n  type: EActionTypes.REMOVE_NOTIFICATION,\r\n  payload: id\r\n})\r\n","import axios from 'axios'\r\nimport { Dispatch } from 'redux'\r\nimport * as types from './actionTypes'\r\nimport { EActionTypes } from './actionTypes'\r\nimport { baseUrl, apiCallsNames as api } from '../../config/config'\r\nimport { IExpense } from '../../interfaces/expense'\r\nimport { TAction } from './interface'\r\n\r\nimport { apiCallStart, apiCallFinishSuccess, apiCallFinishFail, showNotification } from './ui'\r\n\r\nexport const loadingExpenseStart = () => ({\r\n  type: types.LOADING_EXPENSE_START,\r\n})\r\n\r\nexport const setExpensesToStore = (expenses: IExpense[]) : TAction => ({\r\n  type: EActionTypes.SET_EXPENSES,\r\n  payload: expenses\r\n})\r\n\r\nexport const clearExpenses = (): TAction => ({\r\n  type: EActionTypes.CLEAR_EXPENSES\r\n})\r\n\r\nexport const setExpenses = () => async (dispatch: Dispatch<TAction>) => {\r\n  try {\r\n    dispatch(apiCallStart(api.fetchExpenses))\r\n    const res = await axios.get(`${baseUrl}/expenses`)\r\n    if (res.statusText === 'OK') {\r\n      const expenses = res.data.expenses\r\n      dispatch(setExpensesToStore(expenses))\r\n      dispatch(apiCallFinishSuccess(api.fetchExpenses))\r\n    }\r\n  } catch (e: any) {\r\n    console.log(e.message)\r\n    dispatch(setExpensesToStore([]))\r\n    dispatch(apiCallFinishFail(api.fetchExpenses, e))\r\n  }\r\n}\r\n\r\nexport const addExpenseToStore = (expense: IExpense): TAction => ({\r\n  type: EActionTypes.ADD_EXPENSE,\r\n  payload: expense\r\n})\r\n\r\nexport const addExpense = (expenseData: any, uiAction: string, history: any, notification: string) => async (dispatch: Dispatch<TAction | any>) => {\r\n  dispatch(apiCallStart(uiAction))\r\n\r\n  try {\r\n    const res = await axios.post(`${baseUrl}/expenses`, expenseData)\r\n    if (res.statusText === 'Created') {\r\n      const expense = res.data.expense\r\n      dispatch(addExpenseToStore(expense))\r\n      dispatch(apiCallFinishSuccess(uiAction))\r\n      if (notification) { dispatch(showNotification(notification)) }\r\n      history.push('/expenses')\r\n    }\r\n  } catch (e: any) {\r\n    dispatch(apiCallFinishFail(uiAction, e))\r\n    // add error handling\r\n    console.log(e.response)\r\n    console.log(e.message)\r\n  }\r\n}\r\n\r\nexport const removeExpenseFromStore = (id: string): TAction => ({\r\n  type: EActionTypes.REMOVE_EXPENSE,\r\n  payload: id\r\n})\r\n\r\nexport const removeExpense = (id: string, uiAction: string, history: any, notification: string) => async (dispatch: Dispatch<TAction | any>) => {\r\n  dispatch(apiCallStart(uiAction))\r\n  try {\r\n    const res = await axios.delete(`${baseUrl}/expenses/${id}`)\r\n\r\n    if (res.statusText === 'OK') {\r\n      dispatch(removeExpenseFromStore(id))\r\n      dispatch(apiCallFinishSuccess(uiAction))\r\n      if (notification) { dispatch(showNotification(notification)) }\r\n      history.push('/expenses')\r\n    }\r\n  } catch (e) {\r\n    dispatch(apiCallFinishFail(uiAction, e))\r\n  }\r\n}\r\n\r\n\r\nexport const editExpenseInStore = (expense: IExpense): TAction => ({\r\n  type: EActionTypes.EDIT_EXPENSE,\r\n  payload: expense\r\n})\r\n\r\nexport const editExpense = (id: string, updates: any, uiAction: string, history: any, notification: string) => async (dispatch: Dispatch<TAction | any>) => {\r\n  dispatch(apiCallStart(uiAction))\r\n  dispatch(loadingExpenseStart())\r\n  try {\r\n    const res = await axios.patch(`${baseUrl}/expenses/${id}`, updates)\r\n\r\n    if (res.statusText === 'OK') {\r\n      dispatch(editExpenseInStore(res.data.expense))\r\n      dispatch(apiCallFinishSuccess(uiAction))\r\n      if (notification) { dispatch(showNotification(notification)) }\r\n      history.push('/expenses')\r\n    }\r\n  } catch (e: any) {\r\n    dispatch(apiCallFinishFail(uiAction, e))\r\n  }\r\n}","import axios from 'axios'\r\n\r\nconst setAuthToken = (token: string | boolean) => {\r\n  if (token) {\r\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n  } else {\r\n    delete axios.defaults.headers.common['Authorization']\r\n  }\r\n}\r\n\r\nexport default setAuthToken","import axios from 'axios'\r\nimport { TAction } from './interface'\r\nimport { EActionTypes } from './actionTypes'\r\nimport { Dispatch } from 'redux'\r\nimport { IUserData } from '../../interfaces/user'\r\nimport { baseUrl, apiCallsNames as api } from '../../config/config'\r\nimport setAuthToken from '../../lib/setAuthToken'\r\n\r\nimport { setExpenses, clearExpenses } from './expenses'\r\n\r\nimport { apiCallStart, apiCallFinishSuccess, apiCallFinishFail, showNotification } from './ui'\r\n\r\nexport const loadingUserStart = () => ({\r\n  type: EActionTypes.LOADING_USER_START,\r\n})\r\n\r\nexport const setUserToStore = (userData: IUserData): TAction => {\r\n  return {\r\n    type: EActionTypes.SET_USER_DATA,\r\n    payload: userData\r\n  }\r\n}\r\n\r\nexport const clearUser = (): TAction => ({\r\n  type: EActionTypes.CLEAR_USER\r\n})\r\n\r\nexport const changeCurrencyInStore = (newCurrency: string): TAction => ({\r\n  type: EActionTypes.CHANGE_CURRENCY,\r\n  payload: newCurrency\r\n})\r\n\r\nexport const changeCategoriesInStore = (categories: string): TAction => ({\r\n  type: EActionTypes.CHANGE_CATEGORIES,\r\n  payload: categories\r\n})\r\n\r\nexport const getUserData = () => async (dispatch: Dispatch<TAction>) => {\r\n  try {\r\n    dispatch(apiCallStart(api.fetchUser))\r\n    const res = await axios.get(`${baseUrl}/users/userDetails`)\r\n    if (res.statusText === 'OK') {\r\n      const { user } = res.data\r\n      dispatch(setUserToStore(user))\r\n      dispatch(apiCallFinishSuccess(api.fetchUser))\r\n    }\r\n  } catch (e) {\r\n    dispatch(apiCallFinishFail(api.fetchUser, e))\r\n  }\r\n}\r\n\r\nexport const loginUser = (email: string, password: string, history: any) => async (dispatch: Dispatch<TAction | any>) => {\r\n  dispatch(apiCallStart(api.loginUser))\r\n  try {\r\n    const res = await axios.post(`${baseUrl}/users/login`, { email, password })\r\n    if (res.statusText === 'OK') {\r\n      const { userData } = res.data\r\n      const { user, token } = userData\r\n      dispatch(setUserToStore(user))\r\n      localStorage.setItem('jwtToken', token)\r\n      setAuthToken(token)\r\n      dispatch(apiCallFinishSuccess(api.loginUser))\r\n      dispatch(setExpenses())\r\n      dispatch(showNotification('Logged in succesfully'))\r\n      history.push('/expenses')\r\n    }\r\n  } catch (e) {\r\n    dispatch(apiCallFinishFail(api.loginUser, e))\r\n  }\r\n}\r\n\r\nexport const registerUser = (name: string, email: string, password: string, passwordConfirm: string, history: any) => async (dispatch: Dispatch<TAction>) => {\r\n  dispatch(apiCallStart(api.registerUser))\r\n  dispatch(clearExpenses())\r\n  try {\r\n    const res = await axios.post(`${baseUrl}/users`, { name, email, password, passwordConfirm })\r\n\r\n    if (res.statusText === 'Created') {\r\n      const { userData } = res.data\r\n      const { user, token } = userData\r\n      dispatch(setUserToStore(user))\r\n      localStorage.setItem('jwtToken', token)\r\n      setAuthToken(token)\r\n      dispatch(apiCallFinishSuccess(api.registerUser))\r\n      history.push('/expenses')\r\n    }\r\n  } catch (e) {\r\n    dispatch(apiCallFinishFail(api.registerUser, e))\r\n  }\r\n}\r\n\r\nexport const logoutUser = (history?: any) => async (dispatch: Dispatch<TAction>) => {\r\n  dispatch(apiCallStart(api.logoutUser))\r\n  const res = await axios.post(`${baseUrl}/users/logout`)\r\n\r\n  if (res.statusText === 'OK') {\r\n    dispatch(clearUser())\r\n    dispatch(clearExpenses())\r\n    localStorage.removeItem('jwtToken')\r\n    setAuthToken(false)\r\n    dispatch(apiCallFinishSuccess(api.logoutUser))\r\n    history.push('/login')\r\n  }\r\n}\r\n\r\nexport const changeCurrency = (newCurrency: string, uiAction: string) => async (dispatch: Dispatch<TAction | any>) => {\r\n  dispatch(apiCallStart(uiAction))\r\n  try {\r\n    const res = await axios.patch(`${baseUrl}/users/currency`, { newCurrency })\r\n    if (res.statusText === 'OK') {\r\n      const { currency } = res.data\r\n    \r\n      dispatch(changeCurrencyInStore(currency))\r\n      dispatch(apiCallFinishSuccess(uiAction))\r\n      dispatch(showNotification(`Currency changed to ${newCurrency}`))\r\n    }\r\n  } catch (e) {\r\n    dispatch(apiCallFinishFail(uiAction, e))\r\n  }\r\n}\r\n\r\nexport const removeCategory = (category: string, uiAction: string) => async (dispatch: Dispatch<TAction>) => {\r\n  dispatch(apiCallStart(uiAction))\r\n  try {\r\n    const res = await axios.delete(`${baseUrl}/users/category/${category}`)\r\n    if (res.statusText === 'OK') {\r\n      const { categories } = res.data\r\n      dispatch(changeCategoriesInStore(categories))\r\n      dispatch(apiCallFinishSuccess(uiAction))\r\n    }\r\n  } catch (e: any) {\r\n    console.log(e.response)\r\n    dispatch(apiCallFinishFail(uiAction, e))\r\n  }\r\n}\r\n\r\nexport const resetUserPassword = (email: string, uiAction: string) => async (dispatch: Dispatch<TAction>) => {\r\n  dispatch(apiCallStart(uiAction))\r\n  try {\r\n    const res = await axios.post(`${baseUrl}/users/resetPassword`, { email })\r\n    if (res.statusText === 'OK') {\r\n      const { message } = res.data\r\n\r\n      dispatch(apiCallFinishSuccess(uiAction, message))\r\n    }\r\n  } catch (e: any) {\r\n    // console.log(e.response)\r\n    dispatch(apiCallFinishFail(uiAction, e))\r\n  }\r\n}","import { createSelector } from 'reselect'\r\nimport { RootState } from '..'\r\n\r\nconst selectUser = (state: RootState) => state.user\r\n\r\nexport const selectUserData = createSelector(\r\n  [selectUser],\r\n  state => state.userData\r\n)\r\n\r\nexport const selectUserSettings = createSelector(\r\n  [selectUserData],\r\n  state => state.settings\r\n)\r\n\r\nexport const selectUserCategories = createSelector(\r\n  [selectUserData],\r\n  state => state.categories\r\n)\r\n\r\nexport const selectUserId = createSelector(\r\n  [selectUserData],\r\n  state => state._id\r\n)","// import { useState } from 'react'\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectUserId } from '../store/selectors/user'\r\n\r\nexport const useIsUserLogged = () => {\r\n  const id = useSelector(selectUserId)\r\n\r\n  return !!id\r\n}","import styled from 'styled-components'\r\n\r\nconst AuthForm = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n  @media (min-height: 678px) {\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position-x: 53%;\r\n  }\r\n\r\n\r\n  .form {\r\n    margin-top: 5rem;\r\n    padding: 2rem;\r\n    background-color: white;\r\n    border-radius: 8px;\r\n    min-width: 40%;\r\n    @media (max-width: 576px) {\r\n      margin-top: 4rem;\r\n      transform: translateY(-2rem);\r\n      width: 80%;\r\n    }\r\n  }\r\n\r\n  .form__name {\r\n    margin: 0;\r\n    margin-bottom: 1.5rem;\r\n    font-size: 4rem;\r\n    @media (min-width: 576px) {\r\n      font-size: 5rem;\r\n    }\r\n  }\r\n\r\n  .inputGroup {\r\n    font-size: 2rem;\r\n    margin: 0;\r\n    margin-bottom: 1.5rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    @media (min-width: 576px) {\r\n      font-size: 3rem;\r\n    }\r\n\r\n    label {\r\n      margin-bottom: 0.5rem;\r\n    }\r\n    \r\n  }\r\n  .form__button {\r\n\r\n    color: white;\r\n    background: ${props => props.theme.mainThemeColor};\r\n    \r\n    border: 1px solid #555;\r\n    border-radius: 5px;\r\n    padding: 1rem 1.6rem;\r\n    font-size: 2rem;\r\n    text-transform: uppercase;\r\n    cursor: pointer;\r\n    width: 100%;\r\n  }\r\n  .form__link--container {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .form__link {\r\n    display: block;\r\n    margin: 0 auto;\r\n    margin-top: 1rem;\r\n    padding-bottom: .3rem;\r\n    text-decoration: none;\r\n    text-align: center;\r\n    border-bottom: 1px solid transparent; \r\n\r\n    /*  */\r\n    color: grey;\r\n  }\r\n  .form__link:hover {\r\n    border-bottom: 1px solid #ccc;\r\n\r\n    /* text-decoration: underline; */\r\n  }\r\n  .errorMessage,\r\n  .successMessage {\r\n    display: block;\r\n    margin: 1rem 0;\r\n\r\n        \r\n  }\r\n  .errorMessage {\r\n    color: #550000;\r\n  }\r\n\r\n  .successMessage {\r\n    /*  */\r\n    color: black;\r\n  }\r\n\r\n  .testAccount {\r\n    font-size: 2rem;\r\n    cursor: pointer;\r\n    margin-top: 1rem;\r\n    background: none;\r\n    border: none;\r\n    color: black;\r\n  }\r\n  \r\n`\r\n\r\nexport default AuthForm","import { createSelector } from 'reselect'\r\nimport { RootState } from '..'\r\nimport { IApiCallState } from '../../interfaces/ui'\r\n\r\nconst selectUi = (state: RootState) => state.ui\r\n\r\nconst selectApiCalls = createSelector(\r\n  [selectUi],\r\n  state => state.apiCalls\r\n)\r\n\r\nexport const selectSingleApiCall = (eventName: string) => createSelector(\r\n  [selectApiCalls],\r\n  apiCalls => apiCalls.find((item: IApiCallState) => item.name === eventName)\r\n)\r\n\r\nexport const selectFilters = createSelector(\r\n  [selectUi],\r\n  state => state.filter\r\n)\r\n\r\nexport const selectNotifications = createSelector(\r\n  [selectUi],\r\n  state => state.notifications\r\n)\r\n","import { useState, useEffect } from 'react'\r\nimport { Redirect, Link, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { useIsUserLogged } from '../hooks/useIsUserLogged'\r\nimport { apiCallsNames as api } from '../config/config'\r\nimport AuthForm from './styles/AuthForm'\r\nimport { registerUser } from '../store/actions/user'\r\nimport { RootState } from '../store'\r\nimport { IApiCallState } from '../interfaces/ui'\r\nimport { selectSingleApiCall } from '../store/selectors/ui'\r\nimport { clearApiCall } from '../store/actions/ui'\r\n\r\nconst Register = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [passwordConfirm, setPasswordConfirm] = useState('')\r\n  const { loading, error } = useSelector<RootState, IApiCallState>(state => selectSingleApiCall(api.registerUser)(state))\r\n  // LOGIN_USER\r\n  const userLogged = useIsUserLogged()\r\n\r\n  useEffect(() => {\r\n    return () => { dispatch(clearApiCall(api.registerUser)) }\r\n  }, [])\r\n\r\n  const formSubmitHandler = async (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    if (password !== passwordConfirm) {\r\n      return\r\n    }\r\n    dispatch(registerUser(name, email, password, passwordConfirm, history))\r\n  }\r\n\r\n  if (userLogged) {\r\n    return <Redirect to=\"/expenses\" />\r\n  } else {\r\n    return (\r\n      <AuthForm>\r\n          <form onSubmit={formSubmitHandler} className=\"form\">\r\n\r\n          <h1 className=\"form__name\">Register</h1>\r\n\r\n          <div className=\"inputGroup\">\r\n          <label htmlFor=\"firstName\">First Name</label>\r\n          <input type=\"text\" id=\"firstName\" onChange={e => setName(e.target.value)} value={name}/>\r\n          </div>\r\n\r\n          <div className=\"inputGroup\">\r\n          <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={e => setEmail(e.target.value)} value={email}/>\r\n          </div>\r\n\r\n          <div className=\"inputGroup\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" onChange={e => setPassword(e.target.value)} value={password}/>\r\n          </div>\r\n\r\n          <div className=\"inputGroup\">\r\n          <label htmlFor=\"passwordConf\">Password</label>\r\n          <input type=\"password\" id=\"passwordConf\" onChange={e => setPasswordConfirm(e.target.value)} value={passwordConfirm}/>\r\n          </div>\r\n          {error && <span className=\"errorMessage\">{error?.message}</span>}\r\n          <button type=\"submit\" className=\"form__button\" disabled={loading}>Register</button>\r\n          <div className=\"form__link--container\">\r\n            <Link to=\"/login\" className=\"form__link\">User already? Log in</Link>\r\n</div>\r\n          </form>\r\n      </AuthForm>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Register\r\n","import Register from '../components/Register'\r\n\r\nconst RegisterPage = () => {\r\n\r\n  return (\r\n    <div>\r\n      <Register />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterPage\r\n","import { useState, useEffect } from 'react'\r\nimport { Redirect, Link, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { useIsUserLogged } from '../hooks/useIsUserLogged'\r\nimport { apiCallsNames as api } from '../config/config'\r\nimport AuthForm from './styles/AuthForm'\r\nimport { loginUser } from '../store/actions/user'\r\nimport { selectSingleApiCall } from '../store/selectors/ui'\r\nimport { RootState } from '../store'\r\nimport { IApiCallState } from '../interfaces/ui'\r\nimport { clearApiCall } from '../store/actions/ui'\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const { loading, error } = useSelector<RootState, IApiCallState>(state => selectSingleApiCall(api.loginUser)(state))\r\n\r\n  const userLogged = useIsUserLogged()\r\n\r\n  useEffect(() => {\r\n    return () => { dispatch(clearApiCall(api.loginUser)) }\r\n  }, [])\r\n  \r\n  const previewAccountHandler = () => {\r\n    setEmail('qwe@qwe.qwe')\r\n    setPassword('qweqweqwe')\r\n  }\r\n\r\n  const formSubmitHandler = async (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    dispatch(loginUser(email, password, history))\r\n  }\r\n\r\n  if (userLogged) {\r\n    return <Redirect to=\"/expenses\" />\r\n  } else {\r\n    return (\r\n      <AuthForm>\r\n          <form onSubmit={formSubmitHandler} className=\"form\">\r\n\r\n            <h1 className=\"form__name\">Login</h1>\r\n\r\n            <div className=\"inputGroup\">\r\n              <label htmlFor=\"email\">Email:</label>\r\n              <input type=\"email\" id=\"email\" value={email} onChange={e => setEmail(e.target.value)}/>\r\n            </div>\r\n\r\n            <div className=\"inputGroup\">\r\n              <label htmlFor=\"password\">Password:</label>\r\n              <input type=\"password\" id=\"password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n            </div>\r\n            {error && <span className=\"errorMessage\">{error?.errorData?.message ? error?.errorData?.message : error?.message}</span>}\r\n\r\n            <button type=\"submit\" className=\"form__button\">Login</button>\r\n            <div className=\"form__link--container\">\r\n              <button className=\"testAccount\" type=\"button\" onClick={previewAccountHandler} disabled={loading}>Use Preview Account</button>\r\n              <Link to=\"/register\" className=\"form__link\">New User? Create an account</Link>\r\n              <Link to=\"/resetPassword\" className=\"form__link\">Forgot your password?</Link>\r\n            </div>\r\n          </form>\r\n      </AuthForm>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login\r\n","import Login from '../components/Login'\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <div>\r\n      <Login />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginPage\r\n","import styled from 'styled-components'\r\n\r\nconst ButtonsContainer = styled.div<{ buttons: number }>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  @media(min-width: 576px) {\r\n    justify-content: center;\r\n  }\r\n  & > * {\r\n    width: ${props => props.buttons ? (100 - 5) / props.buttons : 100}%;\r\n    @media(min-width: 576px) {\r\n      width: ${props => props.buttons > 5 ? (100 - 5) / props.buttons : (100 - 30) / props.buttons}%;\r\n      margin: 0 2rem;\r\n    }\r\n  }\r\n`\r\n\r\nconst BigButton = styled.button<{danger?: boolean, alert?: boolean, fontSize?: number, wide?: boolean}>`\r\n  cursor: pointer;\r\n  font-size: ${props => props.fontSize ? props.fontSize * 2 : 2}rem;\r\n  background: ${props => {\r\n    if (props.danger) return props.theme.colorDanger\r\n    if (props.alert) return props.theme.colorAlert\r\n    return props.theme.mainThemeColor\r\n  }};\r\n  color: ${props => props.theme.textColorInverted};\r\n  border: none;\r\n  border-radius: 10px;\r\n  box-shadow: ${props => props.theme.boxShadow};\r\n  width: ${props => props.wide ? 100 : 'auto'}%;\r\n  & a {\r\n    display: block;\r\n    padding: 1rem 2rem;\r\n  }\r\n`\r\n\r\nexport { BigButton, ButtonsContainer }","import React from 'react'\r\n\r\ninterface Props {\r\n  error: {\r\n    message?: string\r\n    errorData?: {\r\n      message?: string\r\n    }\r\n  }\r\n}\r\n\r\nconst ErrorMessage: React.FC<Props> = ({ error }) => {\r\n  if (Object.values(error).length <= 0) return null\r\n  if (error.errorData) {\r\n    return (\r\n      <div>\r\n        <p>{error.errorData.message}</p>\r\n      </div>\r\n    )\r\n  }\r\n  if (error.message) {\r\n    return (\r\n      <div>\r\n        <p>{error.message}</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>An error occured</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport DatePicker from 'react-date-picker'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { selectUserCategories } from '../store/selectors/user'\r\n\r\nimport { BigButton, ButtonsContainer } from './styles/BigButton'\r\nimport ErrorMessage from './ErrorMessage'\r\n\r\nimport { IApiCallState } from '../interfaces/ui'\r\n\r\nconst FormContainer = styled.div`\r\n  .form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    >* {\r\n      margin-bottom: 2rem;\r\n    }\r\n  }\r\n\r\n  .text-input,\r\n  .textarea {\r\n    border: 1px solid #cacccd;\r\n    height: 50px;\r\n    font-size: 1.8rem;\r\n    font-family: inherit;\r\n    font-weight: 300;\r\n    padding: 1rem;\r\n  }\r\n\r\n  .textarea {\r\n    height: 10rem;\r\n  }\r\n`\r\n\r\ninterface Props {\r\n  expenseId?: string\r\n  titleExpense?: string\r\n  descriptionExpense?: string\r\n  amountExpense?: number | string\r\n  handleSubmit: (title: string, description: string, amount: number, date: Date | string, category: string) => Promise<void>\r\n  dateExpense?: Date | string\r\n  categoryExpense?: string\r\n  apiCallState: IApiCallState\r\n}\r\n\r\nconst ExpenseForm: React.FC<Props> = ({ \r\n  expenseId, \r\n  titleExpense = '', \r\n  descriptionExpense = '', \r\n  amountExpense = '', \r\n  handleSubmit, \r\n  dateExpense, \r\n  categoryExpense , \r\n  apiCallState \r\n}) => {\r\n  \r\n  const categories = useSelector(selectUserCategories)\r\n  const [title, setTitle] = useState(titleExpense)\r\n  const [description, setDescription] = useState(descriptionExpense)\r\n  const [amount, setAmount] = useState(amountExpense && +amountExpense / 100)\r\n  const [expenseDate, setExpenseDate] = useState(dateExpense ? new Date(dateExpense) : new Date())\r\n  const [category, setCategory] = useState('')\r\n  \r\n  useEffect(() => {\r\n    if (categoryExpense) {\r\n      setCategory(categoryExpense)\r\n    } else if (categories?.length) {\r\n      setCategory(categories[0])\r\n    } else {\r\n      setCategory('other')\r\n    }\r\n  }, [categories, categoryExpense])\r\n\r\n  const formHandler = async (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    // simple validation\r\n    if (!title || (amount && amount <= 0) || !amount) return\r\n\r\n    await handleSubmit(title, description, amount, expenseDate, category)\r\n  }\r\n\r\n  const handleAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.value?.toLowerCase() === 'e') return\r\n    const parsedAmount = Math.floor(Number(e.target.value) * 100) / 100\r\n\r\n    const newAmount = parsedAmount > 0 ? parsedAmount : ''\r\n\r\n    setAmount(newAmount)\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <form onSubmit={formHandler} className=\"form\">\r\n        <input \r\n          className=\"text-input\" \r\n          type=\"text\" \r\n          placeholder=\"Title\" \r\n          value={title} \r\n          onChange={e => setTitle(e.target.value)} \r\n          required\r\n        />\r\n        <input \r\n          className=\"text-input\" \r\n          type=\"number\" \r\n          placeholder=\"Amount\" \r\n          value={amount} \r\n          onChange={(e) => handleAmountChange(e)} \r\n          step=\"0.01\" \r\n          required\r\n        />\r\n        <div>\r\n          <DatePicker \r\n            value={expenseDate} \r\n            onChange={date => setExpenseDate(date as Date)}  \r\n            clearIcon={null}\r\n            minDetail=\"year\"\r\n            required\r\n            format=\"dd.MM.y\"\r\n          />\r\n          <select name=\"category\" value={category} onChange={e => setCategory(e.target.value)}>\r\n            {/* below turnary is for local mobile testing purposes */}\r\n            {categories?.length ? categories.map((item: string) => (\r\n              <option key={item} value={item}>{item}</option>\r\n            )) : (\r\n                <option value=\"other\">Other</option>\r\n            )}\r\n          </select>\r\n        </div>\r\n        <textarea \r\n          className=\"textarea\" \r\n          placeholder=\"Add a short note to you expense\" \r\n          value={description} \r\n          onChange={e => setDescription(e.target.value)}\r\n        />\r\n        <ButtonsContainer buttons={2}>\r\n          <BigButton alert>\r\n            <Link to={expenseId ? `/expenses/${expenseId}` : '/expenses'}>\r\n              Cancel\r\n            </Link>\r\n          </BigButton>\r\n          <BigButton type=\"submit\" disabled={apiCallState?.loading}>Save expense</BigButton>\r\n        </ButtonsContainer>\r\n        {apiCallState?.loading && <p>Saving</p>}\r\n        {apiCallState.error && <ErrorMessage error={apiCallState.error} />}\r\n      </form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ExpenseForm\r\n","import React from 'react'\r\n\r\ninterface IProps {\r\n  children: React.ReactNode,\r\n  className?: string\r\n}\r\n\r\nconst PageName: React.FC<IProps> = ({ children, className }) => {\r\n  return (\r\n    <h2 style={{fontSize: '3.6rem', fontWeight: 600, letterSpacing: '.3px', marginBottom: '.5rem' }} className={className}>\r\n      {children}\r\n    </h2>\r\n  )\r\n}\r\n\r\nexport default PageName\r\n","import { useHistory } from 'react-router-dom'\r\nimport ExpenseForm from '../components/ExpenseForm'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { addExpense } from '../store/actions/expenses'\r\nimport { selectSingleApiCall } from '../store/selectors/ui'\r\nimport { apiCallsNames as api } from '../config/config'\r\nimport { RootState } from '../store'\r\nimport { IApiCallState } from '../interfaces/ui'\r\nimport PageName from '../components/styles/PageName'\r\n\r\nconst AddExpensePage = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const saveNewExpenseApiState = useSelector<RootState, IApiCallState>(state => selectSingleApiCall(api.saveNewExpense)(state))\r\n  const addExpenseHandler = async (title: string, description: string, amount: number, date: Date | string, category: string) => {\r\n    // save expense as whole number\r\n    const validAmount = Math.floor(amount * 100)\r\n    dispatch(addExpense({title, description, amount: validAmount, expenseDate: date, category}, api.saveNewExpense, history, 'Expense added')) \r\n  }\r\n  \r\n  return (\r\n    <div className=\"margin-r-l\">\r\n      <PageName className=\"no-margin\">Add Expense</PageName>\r\n      <ExpenseForm handleSubmit={addExpenseHandler} apiCallState={saveNewExpenseApiState}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddExpensePage\r\n","import { isAfter, isBefore } from 'date-fns'\r\nimport { IExpense } from '../interfaces/expense'\r\nimport { IFilter } from '../interfaces/ui'\r\n\r\n\r\nconst expenseFilter = (expenses: IExpense[], { search, category, dateRangeStart, dateRangeEnd, sortBy, sortDirection }: IFilter) => {\r\n  return expenses.filter(item => {\r\n    const expenseDate = new Date(item.expenseDate)\r\n    const textMatch = item.title.toLowerCase().includes(search.toLowerCase()) || (\r\n      item.description && item.description.toLowerCase().includes(search.toLowerCase())\r\n      )\r\n    const categoryMatch = category ? item.category.toLowerCase() === category.toLowerCase() : true\r\n\r\n    let dateMatchStart = true, dateMatchEnd = true\r\n    if (dateRangeStart) {\r\n      dateMatchStart = isAfter(expenseDate, new Date(dateRangeStart))\r\n    }\r\n    if (dateRangeEnd) {\r\n      dateMatchEnd = isBefore(expenseDate, new Date(dateRangeEnd))\r\n    }\r\n    return textMatch && dateMatchStart && dateMatchEnd && categoryMatch\r\n  })\r\n  .sort((a, b) => {\r\n    if (sortBy === 'DATE') {\r\n      if (a.expenseDate === b.expenseDate) return 0\r\n      let sortExpression = a.expenseDate < b.expenseDate\r\n      if (sortDirection === 'ASC') {\r\n        sortExpression = a.expenseDate > b.expenseDate\r\n      } else if (sortDirection === 'DESC') {\r\n        sortExpression = a.expenseDate < b.expenseDate\r\n      }\r\n      return sortExpression ? 1 : -1\r\n    }\r\n\r\n    if (sortBy === 'AMOUNT') {\r\n      if (a.amount === b.amount) return 0\r\n      let sortExpression = a.amount < b.amount\r\n      if (sortDirection === 'ASC') {\r\n        sortExpression = a.amount > b.amount\r\n      } else if (sortDirection === 'DESC') {\r\n        sortExpression = a.amount < b.amount\r\n      }\r\n      return sortExpression ? 1 : -1\r\n    }\r\n    // it should never reach it\r\n    return 0\r\n  })\r\n}\r\n\r\nexport default expenseFilter","import { createSelector } from 'reselect'\r\nimport { selectFilters } from './ui'\r\n\r\nimport expenseFilter from '../../lib/expenseFilter'\r\nimport { RootState } from '..'\r\n\r\nconst selectExpenses = (state: RootState) => state.expenses\r\n\r\nexport const selectAllExpenses = createSelector(\r\n  [selectExpenses, selectFilters],\r\n  (state, filters) => expenseFilter(state.expenses, filters)\r\n)\r\n\r\n\r\nexport const selectSingleExpense = (id: string) => createSelector(\r\n  [selectAllExpenses],\r\n  expenses => (expenses ? expenses.find(item => item._id === id) : null),\r\n)","import styled, { keyframes } from 'styled-components'\r\n\r\nconst round = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n`\r\n\r\nconst load = keyframes`\r\n  0% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\r\n  }\r\n  5%,\r\n  95% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\r\n  }\r\n  10%,\r\n  59% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, -0.087em -0.825em 0 -0.42em, -0.173em -0.812em 0 -0.44em, -0.256em -0.789em 0 -0.46em, -0.297em -0.775em 0 -0.477em;\r\n  }\r\n  20% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, -0.338em -0.758em 0 -0.42em, -0.555em -0.617em 0 -0.44em, -0.671em -0.488em 0 -0.46em, -0.749em -0.34em 0 -0.477em;\r\n  }\r\n  38% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, -0.377em -0.74em 0 -0.42em, -0.645em -0.522em 0 -0.44em, -0.775em -0.297em 0 -0.46em, -0.82em -0.09em 0 -0.477em;\r\n  }\r\n  100% {\r\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\r\n  }\r\n`\r\n\r\nconst Loading = styled.div`\r\n  color: ${props => props.theme.mainThemeColor};\r\n  font-size: 90px;\r\n  text-indent: -9999em;\r\n  overflow: hidden;\r\n  width: 1em;\r\n  height: 1em;\r\n  border-radius: 50%;\r\n  margin: 72px auto;\r\n  position: relative;\r\n  -webkit-transform: translateZ(0);\r\n  -ms-transform: translateZ(0);\r\n  transform: translateZ(0);\r\n  -webkit-animation: load 1.7s infinite ease, round 1.7s infinite ease;\r\n  animation: ${load} 1.7s infinite ease, ${round} 1.7s infinite ease;\r\n`\r\n\r\nexport default Loading","import React from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { selectSingleExpense } from '../store/selectors/expenses'\r\nimport { editExpense } from '../store/actions/expenses'\r\nimport { selectSingleApiCall } from '../store/selectors/ui'\r\n\r\nimport ExpenseForm from '../components/ExpenseForm'\r\nimport Loading from '../components/styles/Loading'\r\nimport { apiCallsNames as api } from '../config/config'\r\nimport { IExpense } from '../interfaces/expense'\r\nimport { RootState } from '../store'\r\nimport { IApiCallState } from '../interfaces/ui'\r\nimport PageName from '../components/styles/PageName'\r\n\r\nconst EditExpense = () => {\r\n  const { expenseId } = useParams<{expenseId: string}>()\r\n  const history = useHistory()\r\n  const expense = useSelector<RootState, IExpense | null | undefined>(state => selectSingleExpense(expenseId)(state))\r\n  const saveEditExpenseApiState = useSelector<RootState, IApiCallState>(state => selectSingleApiCall(api.saveEditExpense)(state))\r\n  const dispatch = useDispatch()\r\n\r\n  type Updates = {\r\n    title: string, description: string, amount: number, date: string, category: string, expenseDate?: string | Date\r\n  }\r\n  \r\n  const editExpenseHandler = async (title: string, description: string, amount: number, date: Date | string, category: string) => {\r\n    if (!expense) return\r\n    const updates = {} as Updates\r\n    updates.expenseDate = date\r\n    if (title !== expense.title) {\r\n      updates.title = title\r\n    }\r\n    if (description !== expense.description) {\r\n      updates.description = description\r\n    }\r\n    if (amount !== expense.amount) { \r\n      const validAmount = Math.ceil(amount * 100)\r\n      updates.amount = validAmount\r\n    }\r\n    if (category !== expense.category) {\r\n      updates.category = category\r\n    }\r\n    // save expense as whole number\r\n    dispatch(editExpense(expenseId, updates, api.saveEditExpense, history, 'Expense saved')) \r\n  }\r\n\r\n  if (!expense) {\r\n    return <Loading />\r\n  }\r\n  \r\n  return (\r\n    <div className=\"margin-r-l\">\r\n      <PageName className=\"no-margin\">Edit expense</PageName>\r\n      <ExpenseForm \r\n        expenseId={expenseId}\r\n        titleExpense={expense.title} \r\n        descriptionExpense={expense.description} \r\n        amountExpense={expense.amount} \r\n        dateExpense={expense.expenseDate}\r\n        categoryExpense={expense.category}\r\n        handleSubmit={editExpenseHandler}\r\n        apiCallState={saveEditExpenseApiState}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditExpense\r\n","const formatMoney = (amount: number, currency = 'USD', locale = 'en-US') => {\r\n  const options = {\r\n    style: 'currency',\r\n    currency,\r\n    minimumFractionDigits: 2,\r\n  };\r\n\r\n  if (amount % 100 === 0) options.minimumFractionDigits = 0;\r\n  const formatter = new Intl.NumberFormat(locale, options);\r\n  return formatter.format(amount / 100);\r\n}\r\n\r\nexport default formatMoney","import React, { memo } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { format } from 'date-fns'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport formatMoney from '../lib/formatMoney'\r\n\r\nimport { selectUserSettings } from '../store/selectors/user'\r\nimport { IExpense } from '../interfaces/expense'\r\nimport { RootState } from '../store'\r\nimport { IUserSettings } from '../interfaces/user'\r\n\r\nconst ListItem = styled.li`\r\n  /* margin: 1rem 0; */\r\n  border-radius: 1rem;\r\n\r\n  background: #fff;\r\n  box-shadow: ${props => props.theme.boxShadow} transparent;\r\n  transition: box-shadow 0.1s ease-in-out;\r\n  \r\n  &:hover {\r\n    @media (min-width: 576px) {\r\n      /* box-shadow: ${props => props.theme.boxShadow} ${props => props.theme.boxShadowColor}; */\r\n    }\r\n  }\r\n\r\n  .expenseLink {\r\n    display: block;\r\n    padding: .3rem 1.5rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  .expense {\r\n    margin: 0;\r\n    font-size: 3.0rem;\r\n    font-weight: normal;\r\n  }\r\n\r\n  .details {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-end;\r\n  }\r\n\r\n  .amount {\r\n    color: ${props => props.theme.mainThemeColor};\r\n    font-size: 2rem;\r\n  }\r\n\r\n  .date {\r\n    font-size: 1.2rem;\r\n    color: ${props => props.theme.textGreyColor};\r\n  }\r\n`\r\n\r\ninterface Props {\r\n  expense: IExpense\r\n}\r\n\r\nconst ExpenseListItem: React.FC<Props> = ({ expense }) => {\r\n  const { currency, locale } = useSelector<RootState, IUserSettings>(selectUserSettings)\r\n  // console.log('ex list item rend')\r\n  return (\r\n    <ListItem>\r\n      <Link to={`/expenses/${expense._id}`} className=\"expenseLink\">\r\n        <h2 className=\"expense\">{expense.title}</h2>\r\n        <div className=\"details\">\r\n          <p className=\"amount\">{formatMoney(expense.amount, currency, locale)}</p>\r\n          <p className=\"date\">{expense.expenseDate && format(new Date(expense.expenseDate), 'd LLL')}</p>\r\n        </div>\r\n      </Link>\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nexport default memo(ExpenseListItem)\r\n","import styled from 'styled-components'\r\n\r\nconst List = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n`\r\n\r\nexport default List","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { apiCallsNames as api } from '../config/config'\r\n\r\nimport { selectAllExpenses } from '../store/selectors/expenses'\r\nimport { selectSingleApiCall } from '../store/selectors/ui'\r\n\r\nimport ExpenseListItem from './ExpenseListItem'\r\nimport Loading from './styles/Loading'\r\nimport ErrorMessage from './ErrorMessage'\r\nimport List from './styles/List'\r\nimport { RootState } from '../store'\r\nimport { IExpense } from '../interfaces/expense'\r\nimport { IApiCallState } from '../interfaces/ui'\r\n\r\nconst ExpensesList = () => {\r\n  const expenses = useSelector<RootState, IExpense[]>(selectAllExpenses)\r\n  const expensesApi = useSelector<RootState, IApiCallState>(state => selectSingleApiCall(api.fetchExpenses)(state))\r\n\r\n  if (expensesApi.loading) {\r\n    return <Loading />\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <List>\r\n        {expenses?.map(item => (\r\n          <ExpenseListItem key={item._id} expense={item}/>\r\n        ))}\r\n      </List>\r\n      {expensesApi.error && <ErrorMessage error={expensesApi.error} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExpensesList\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { selectFilters } from '../store/selectors/ui'\r\nimport { updateFilter } from '../store/actions/ui'\r\nimport { selectUserCategories } from '../store/selectors/user'\r\nimport { IFilter } from '../interfaces/ui'\r\nimport { RootState } from '../store' \r\n\r\nconst Filter = () => {\r\n  const { search, category, dateRangeStart, dateRangeEnd, sortBy, sortDirection } = useSelector<RootState, IFilter>(selectFilters)\r\n  const categories = useSelector<RootState, string[] | undefined>(selectUserCategories)\r\n  const dispatch = useDispatch()\r\n\r\n  const handleChange = (update: Partial<IFilter>) => {\r\n    dispatch(updateFilter(update))\r\n  }\r\n\r\n  const toggleSortDirection = (currentDirection: string): 'ASC' | 'DESC' => {\r\n    if (currentDirection === 'ASC') return 'DESC'\r\n    return 'ASC'\r\n  }\r\n\r\n  return (\r\n    <div className=\"margin-r-l\">\r\n      Search: <input type=\"text\" value={search} onChange={e => handleChange({search: e.target.value})}/>\r\n\r\n      <select value={category} onChange={e => handleChange({ category: e.target.value })}>\r\n        <option value=\"\">All categories</option>\r\n        {categories?.map((item: string) => (\r\n          <option key={item} value={item}>{item}</option>\r\n        ))}\r\n      </select>\r\n\r\n      <select value={sortBy} onChange={(e) => {\r\n          if (!e.target.value) return\r\n          handleChange({ sortBy: e.target.value as 'DATE' | 'AMOUNT'})\r\n      }}>\r\n        <option value=\"DATE\">Date</option>\r\n        <option value=\"AMOUNT\">Amount</option>\r\n      </select>\r\n\r\n      <button onClick={() => handleChange({sortDirection: toggleSortDirection(sortDirection)})}>{sortDirection}</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\nimport ExpensesList from '../components/ExpensesList'\r\nimport Filter from '../components/Filter'\r\nimport PageName from '../components/styles/PageName'\r\n\r\nconst ExpensesPage = () => {\r\n  return (\r\n    <div>\r\n      <PageName className=\"margin-r-l\">Expenses</PageName>\r\n      <Filter />\r\n      <ExpensesList />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExpensesPage\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { format } from 'date-fns'\r\n\r\nimport { removeExpense } from '../store/actions/expenses'\r\nimport { selectUserSettings } from '../store/selectors/user'\r\nimport { selectSingleExpense } from '../store/selectors/expenses'\r\nimport { selectSingleApiCall } from '../store/selectors/ui'\r\nimport formatMoney from '../lib/formatMoney'\r\nimport { apiCallsNames as api } from '../config/config'\r\n\r\nimport Loading from './styles/Loading'\r\nimport { BigButton, ButtonsContainer } from './styles/BigButton'\r\nimport ErrorMessage from './ErrorMessage'\r\n\r\nimport { RootState } from '../store' \r\nimport { IApiCallState } from '../interfaces/ui'\r\nimport { IExpense } from '../interfaces/expense'\r\nimport { IUserSettings } from '../interfaces/user'\r\n\r\nconst ExpenseContainer = styled.div`\r\n  .title {\r\n    /* text-align: center; */\r\n  }\r\n  p {\r\n    margin: .5rem 0;\r\n  }\r\n`\r\n\r\ninterface Props {\r\n  expenseId: string\r\n}\r\n\r\nconst Expense: React.FC<Props> = ({ expenseId }) => {\r\n  const history = useHistory()\r\n  const { loading, error } = useSelector<RootState, IApiCallState>(state => selectSingleApiCall(api.removeExpense)(state))\r\n  const expense = useSelector<RootState, IExpense | null | undefined>(state => selectSingleExpense(expenseId)(state))\r\n  const { currency, locale } = useSelector<RootState, IUserSettings>(selectUserSettings)\r\n  const dispatch = useDispatch()\r\n\r\n  const removeExpenseHandler = () => {\r\n    dispatch(removeExpense(expenseId, api.removeExpense, history, 'Expense deleted'))\r\n  }\r\n  \r\n  if (!expense || !currency) {\r\n    return (\r\n      <Loading />\r\n    )\r\n  }\r\n  return (\r\n    <ExpenseContainer className=\"margin-r-l\">\r\n      <h2 className=\"title\">{expense.title}</h2>\r\n      <p>Amount: {formatMoney(expense.amount, currency, locale)}</p>\r\n      <p>Date: {format(new Date(expense.expenseDate), 'd LLL')}</p>\r\n      <p>Category: {expense.category}</p>\r\n      <p>{expense?.description}</p>\r\n      <ButtonsContainer buttons={2}>\r\n        <BigButton alert fontSize={1.2} >\r\n          <Link to={`/expenses/edit/${expenseId}`}>\r\n            Edit\r\n          </Link>\r\n        </BigButton>\r\n        <BigButton onClick={removeExpenseHandler} danger fontSize={1.2} disabled={loading}>\r\n          Delete\r\n        </BigButton>\r\n      </ButtonsContainer>\r\n      {loading && <span>Removing</span>}\r\n      {error && <ErrorMessage error={error} />}\r\n    </ExpenseContainer>\r\n  )\r\n}\r\n\r\nexport default Expense\r\n","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Expense from '../components/Expense'\r\nimport PageName from '../components/styles/PageName'\r\n\r\nconst ExpensePage = () => {\r\n  const { expenseId } = useParams<{ expenseId: string }>()\r\n  return (\r\n    <div>\r\n      <PageName className=\"margin-r-l\">Expense</PageName>\r\n      <Expense expenseId={expenseId}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExpensePage\r\n","\r\nconst theme = {\r\n  violet: {\r\n    id: 'violet',\r\n    name: 'Violet',\r\n    mainThemeColor: '#636be0',\r\n    boxShadow: '0px 2px 20px -10px',\r\n    boxShadowColor: '#999',\r\n    textGreyColor: '#777',\r\n    textColor: '#111',\r\n    textColorInverted: '#fff',\r\n    textColorWhite: '#fff',\r\n    colorDanger: '#d93f4e',\r\n    colorAlert: '#f5b800',\r\n    backgroundColor: '#fff',\r\n  },\r\n  pumpkin: {\r\n    id: 'pumpkin',\r\n    name: 'Pumpkin',\r\n    mainThemeColor: '#bf631d',\r\n    boxShadow: '0px 2px 20px -10px',\r\n    boxShadowColor: '#999',\r\n    textGreyColor: '#777',\r\n    textColor: '#111',\r\n    textColorInverted: '#fff',\r\n    textColorWhite: '#fff',\r\n    colorDanger: '#d93f4e',\r\n    colorAlert: '#f5b800',\r\n    backgroundColor: '#fff',\r\n  },\r\n  sea: {\r\n    id: 'sea',\r\n    name: 'Sea',\r\n    mainThemeColor: '#299977',\r\n    boxShadow: '0px 2px 20px -10px',\r\n    boxShadowColor: '#999',\r\n    textGreyColor: '#777',\r\n    textColor: '#111',\r\n    textColorInverted: '#fff',\r\n    textColorWhite: '#fff',\r\n    colorDanger: '#d93f4e',\r\n    colorAlert: '#dba500',\r\n    backgroundColor: '#fff',\r\n  },\r\n  blue: {\r\n    id: 'blue',\r\n    name: 'Blue',\r\n    mainThemeColor: '#1e70ce',\r\n    boxShadow: '0px 2px 20px -10px',\r\n    boxShadowColor: '#999',\r\n    textGreyColor: '#777',\r\n    textColor: '#111',\r\n    textColorInverted: '#fff',\r\n    textColorWhite: '#fff',\r\n    colorDanger: '#d93f4e',\r\n    colorAlert: '#f5b800',\r\n    backgroundColor: '#fff',\r\n  },\r\n  red: {\r\n    id: 'red',\r\n    name: 'Red',\r\n    mainThemeColor: '#cc434a',\r\n    boxShadow: '0px 2px 20px -10px',\r\n    boxShadowColor: '#999',\r\n    textGreyColor: '#777',\r\n    textColor: '#111',\r\n    textColorInverted: '#fff',\r\n    textColorWhite: '#fff',\r\n    colorDanger: '#d93f4e',\r\n    colorAlert: '#f5b800',\r\n    backgroundColor: '#fff',\r\n  },\r\n}\r\n\r\nexport const getTheme = (id = 'violet') => {\r\n  const chosenTheme = Object.values(theme).find(item => item.id === id)\r\n  if (!chosenTheme) {\r\n    return {\r\n      id: 'sea',\r\n      name: 'Sea',\r\n      mainThemeColor: '#299977',\r\n      boxShadow: '0px 2px 20px -10px',\r\n      boxShadowColor: '#999',\r\n      textGreyColor: '#777',\r\n      textColor: '#111',\r\n      textColorInverted: '#fff',\r\n      textColorWhite: '#fff',\r\n      colorDanger: '#d93f4e',\r\n      colorAlert: '#dba500',\r\n      backgroundColor: '#fff',\r\n    }\r\n  }\r\n  return chosenTheme\r\n}\r\n\r\nexport const getThemeData = () => {\r\n  const themeData = Object.values(theme).map(item => {\r\n    return {\r\n      id: item.id,\r\n      name: item.name,\r\n      mainColor: item.mainThemeColor\r\n    }\r\n  })\r\n  return themeData\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { removeCategory } from '../../store/actions/user'\r\nimport { selectSingleApiCall } from '../../store/selectors/ui'\r\nimport { apiCallsNames as api } from '../../config/config'\r\nimport styled from 'styled-components'\r\nimport ErrorMessage from '../ErrorMessage'\r\nimport List from '../styles/List'\r\nimport { IApiCallState } from '../../interfaces/ui'\r\nimport { RootState } from '../../store'\r\n\r\nconst ListElement = styled.li`\r\n  &::first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n`\r\n\r\ninterface Props {\r\n  categories?: string[]\r\n}\r\n\r\nconst CategoriesSettings: React.FC<Props> = ({ categories }) => {\r\n  const dispatch = useDispatch()\r\n  const { loading, error } = useSelector<RootState, IApiCallState>(state => selectSingleApiCall(api.removeCategory)(state))\r\n\r\n  return (\r\n    <div>\r\n      Your categories:\r\n      <List>\r\n        {categories?.map(item => (\r\n          <ListElement key={item}>{item} <button onClick={() => dispatch(removeCategory(item, api.removeCategory))} disabled={loading}>X</button> </ListElement>\r\n        ))}\r\n      </List>\r\n      { loading && <span>Removing</span> }\r\n      {error && <ErrorMessage error={error} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoriesSettings\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { availableCurrencies, apiCallsNames as api } from '../../config/config'\r\nimport { IApiCallState } from '../../interfaces/ui'\r\nimport { RootState } from '../../store'\r\n\r\nimport { changeCurrency } from '../../store/actions/user'\r\nimport { selectSingleApiCall } from '../../store/selectors/ui'\r\nimport ErrorMessage from '../ErrorMessage'\r\n\r\ninterface Props {\r\n  userCurrency: string\r\n}\r\n\r\nconst CurrencySettings: React.FC<Props> = ({ userCurrency }) => {\r\n  const [currency, setCurrency] = useState('')\r\n  const dispatch = useDispatch()\r\n  const saveCurrencyApiState = useSelector<RootState, IApiCallState>(state => selectSingleApiCall(api.saveCurrency)(state))\r\n\r\n  const changeCurrencyHandler = () => {\r\n    if (!currency) { return }\r\n    dispatch(changeCurrency(currency, api.saveCurrency))\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <label htmlFor=\"currency\">Choose currency:</label>\r\n      <select name=\"currency\" id=\"currency\" value={currency} onChange={e => setCurrency(e.target.value)} >\r\n        <option value=\"\">Choose currency</option>\r\n        {availableCurrencies.map(item => (\r\n          <option key={item} value={item} >{item}</option>\r\n        ))}\r\n      </select>\r\n      <button disabled={userCurrency === currency || !currency || saveCurrencyApiState.loading} onClick={changeCurrencyHandler}>Save</button>\r\n      {saveCurrencyApiState.loading && <p>Saving</p>}\r\n      {saveCurrencyApiState.error && <ErrorMessage error={saveCurrencyApiState.error} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CurrencySettings\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst ThemeColor = styled.div<{chosenColor: boolean, backColor: string}>`\r\n  flex: 1;\r\n  margin: 0 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  cursor: pointer;\r\n\r\n  .themeName {\r\n    margin-top: .5rem;\r\n    color: ${props => props.theme.textColor}\r\n  }\r\n  .colorCircle {\r\n    .outer {\r\n      background: #fff;\r\n      border: 1px solid ${props => props.chosenColor ? props.backColor : '#fff'};\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      height: 3rem;\r\n      width: 3rem;\r\n      border-radius: 50%;\r\n    }\r\n    .inner {\r\n      padding: 1rem;\r\n      display: block;\r\n      height: 2rem;\r\n      width: 2rem;\r\n      border-radius: 50%;\r\n      background-color: ${props => props.backColor};\r\n    }\r\n  }\r\n`\r\n\r\n\r\ninterface Props {\r\n  changeAppTheme: (themeId: string) => void\r\n  themeId: string\r\n  themes: { \r\n    id: string \r\n    name: string \r\n    mainColor: string \r\n  }[]\r\n}\r\n\r\nconst ThemeSettings: React.FC<Props> = ({ themes, themeId, changeAppTheme }) => {\r\n  return (\r\n    <>\r\n      {themes?.map(item => {\r\n        return (\r\n          <ThemeColor \r\n            key={item.id} \r\n            className=\"theme\" \r\n            onClick={() => changeAppTheme(item.id)} \r\n            backColor={item.mainColor} \r\n            chosenColor={themeId === item.id}\r\n          >\r\n            <div className=\"colorCircle\" >\r\n              <div className=\"outer\">\r\n                <div className=\"inner\" />\r\n              </div>\r\n            </div>\r\n            <span className=\"themeName\">{item.name}</span>\r\n          </ThemeColor>\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ThemeSettings\r\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport { RootState } from '../../store'\r\n\r\nimport { selectUserSettings, selectUserCategories } from '../../store/selectors/user'\r\n\r\nimport { getThemeData } from '../styles/theme'\r\nimport CategoriesSettings from './CategoriesSettings'\r\nimport CurrencySettings from './CurrencySettings'\r\nimport ThemeSettings from './ThemeSettings'\r\n\r\nconst SettingContainer = styled.div`\r\n  .appTheme {\r\n    @media (min-width: 768px) {\r\n      width: 50%;\r\n    }\r\n  }\r\n\r\n  .themes {\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    margin: 1rem 0;\r\n  }\r\n`\r\n\r\ninterface Props {\r\n  changeAppTheme: (themeId: string) => void\r\n  themeId: string\r\n}\r\n\r\nconst UserSettings: React.FC<Props> = ({ changeAppTheme, themeId }) => {\r\n  const [themes] = useState(() => getThemeData())\r\n  const settings = useSelector<RootState, { currency: string, locale: string }>(selectUserSettings)\r\n  const categories = useSelector<RootState, string[] | undefined>(selectUserCategories)\r\n\r\n  return (\r\n    <SettingContainer>\r\n      <div className=\"appTheme\">\r\n        <p>Choose app theme:</p>\r\n        <div className=\"themes\">\r\n          <ThemeSettings themes={themes} themeId={themeId} changeAppTheme={changeAppTheme}/>\r\n        </div>\r\n        <div>\r\n          <CurrencySettings userCurrency={settings?.currency}/>\r\n        </div>\r\n        <div>\r\n          <CategoriesSettings categories={categories}/>\r\n        </div>\r\n      </div>\r\n    </SettingContainer>\r\n  )\r\n}\r\n\r\nexport default UserSettings\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { logoutUser } from '../store/actions/user'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nimport { selectUserData } from '../store/selectors/user'\r\n\r\nimport UserSettings from './UserSetings/UserSettings'\r\nimport { RootState } from '../store'\r\nimport { IUserData } from '../interfaces/user'\r\n\r\ninterface Props {\r\n  changeAppTheme: (themeId: string) => void\r\n  themeId: string\r\n}\r\n\r\nconst UserContainer = styled.div`\r\n  h1 {\r\n    margin: 1rem 0;\r\n  }\r\n` \r\n\r\nconst User: React.FC<Props> = ({ changeAppTheme, themeId }) => {\r\n  const user = useSelector<RootState, IUserData>(selectUserData)\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  return (\r\n    <UserContainer className=\"margin-r-l\">\r\n      <h1>{user.name}</h1>\r\n      <UserSettings changeAppTheme={changeAppTheme} themeId={themeId}/>\r\n      {/* logout below is for testing */}\r\n      <button onClick={() => dispatch(logoutUser(history))}>Logout</button>\r\n    </UserContainer>\r\n  )\r\n}\r\n\r\nexport default User\r\n","import React from 'react'\r\n\r\nimport User from '../components/User'\r\n\r\ninterface Props {\r\n  themeId: string\r\n  changeAppTheme: (themeId: string) => void\r\n}\r\n\r\nconst user: React.FC<Props> = ({ changeAppTheme, themeId }) => {\r\n  return (\r\n    <div>\r\n      <User  changeAppTheme={changeAppTheme} themeId={themeId}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default user\r\n","export const isEmail = (email: string) => {\r\n  return /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)\r\n}","import { useState, useEffect } from 'react'\r\nimport { Redirect, Link, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { useIsUserLogged } from '../hooks/useIsUserLogged'\r\nimport { apiCallsNames as api } from '../config/config'\r\nimport AuthForm from './styles/AuthForm'\r\nimport { resetUserPassword } from '../store/actions/user'\r\nimport { selectSingleApiCall } from '../store/selectors/ui'\r\nimport { RootState } from '../store'\r\nimport { IApiCallState } from '../interfaces/ui'\r\nimport { clearApiCall } from '../store/actions/ui'\r\nimport { isEmail } from '../lib/isEmail'\r\n\r\nconst ResetPassword = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const { loading, error, successMessage } = useSelector<RootState, IApiCallState>(state => selectSingleApiCall(api.resetPassword)(state))\r\n  // console.log(error)\r\n  const userLogged = useIsUserLogged()\r\n\r\n  useEffect(() => {\r\n    return () => { dispatch(clearApiCall(api.resetPassword)) }\r\n  }, [])\r\n\r\n  const formSubmitResetHandler = async (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    const userEmailIsValid = isEmail(email)\r\n\r\n    if (!userEmailIsValid) {\r\n      return\r\n    }\r\n    dispatch(resetUserPassword(email, api.resetPassword))\r\n  }\r\n\r\n  if (userLogged) {\r\n    return <Redirect to=\"/expenses\" />\r\n  } else {\r\n    return (\r\n      <AuthForm>\r\n          <form onSubmit={formSubmitResetHandler} className=\"form\">\r\n\r\n          <h1 className=\"form__name\">Reset Password</h1>\r\n\r\n          <div className=\"inputGroup\">\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input type=\"email\" id=\"email\" value={email} onChange={e => setEmail(e.target.value)}/>\r\n          </div> \r\n\r\n\r\n          <button type=\"submit\" className=\"form__button\">Reset</button>\r\n            {error && <span className=\"errorMessage\">{error?.errorData?.message ? error?.errorData?.message : error?.message}</span>}\r\n            {successMessage && <span className=\"successMessage\">{successMessage}</span>}\r\n          </form>\r\n      </AuthForm>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ResetPassword\r\n","import ResetPassword from \"../components/ResetPassword\"\r\n\r\nconst ResetPasswordPage = () => {\r\n  return (\r\n    <div>\r\n      <ResetPassword />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResetPasswordPage\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nimport { dismissNotification } from '../store/actions/ui'\r\n\r\nconst ItemDiv = styled.div<{width: number}>`\r\n  font-size: 1.8rem;\r\n  position: relative;\r\n  border: 1px solid rgba(200,200,200, .6);\r\n  border-radius: 7px;\r\n  margin-bottom: 3px;\r\n  box-shadow: ${props => props.theme.boxShadow};\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  background: ${props => props.theme.backgroundColor};\r\n  padding: 1rem 1.5rem;\r\n  \r\n  span {\r\n    display: block;\r\n  }\r\n\r\n  &::after {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    content: '';\r\n    width: ${props => props.width}%;\r\n    height: 3px;\r\n    background: ${props => props.theme.mainThemeColor};\r\n  }\r\n  button {\r\n    border: none;\r\n    background: none;\r\n  }\r\n`\r\ninterface Props {\r\n  message: string\r\n  notificationId: string\r\n}\r\n\r\nconst NotificationItem: React.FC<Props> = ({ message, notificationId }) => {\r\n  const dispatch = useDispatch()\r\n  const [width, setWidth] = useState(100)\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setWidth(state => state - 1)\r\n    }, 40)\r\n    return () => {\r\n      clearInterval(timer)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <ItemDiv width={width}>\r\n      <span>{message}</span>\r\n      <button onClick={() => dispatch(dismissNotification(notificationId))}>X</button>\r\n    </ItemDiv>\r\n  )\r\n}\r\n\r\nexport default NotificationItem\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { INotification } from '../interfaces/ui'\r\nimport NotificationItem from './NotificationItem'\r\n\r\nconst NotificationBox = styled.div`\r\n  position: fixed;\r\n  left: 1rem;\r\n  bottom: 1rem;\r\n  @media (min-width: 768px) {\r\n    left: 3rem;\r\n    bottom: 2rem;\r\n  }\r\n`\r\n\r\ninterface Props {\r\n  notifications: INotification[]\r\n}\r\n\r\nconst Notifications: React.FC<Props> = ({ notifications }) => {\r\n  return (\r\n    <NotificationBox>\r\n      {notifications.map(item => (\r\n        <NotificationItem key={item.id} notificationId={item.id} message={item.message}/>\r\n      ))}\r\n    </NotificationBox>\r\n  )\r\n}\r\n\r\nexport default Notifications\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html {\r\n    font-size: 62.5%;\r\n    box-sizing: border-box;\r\n  }\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: inherit;\r\n  }\r\n  p {\r\n    margin: 0;\r\n  }\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: 'Poppins', sans-serif;\r\n    /* font-family: 'Urbanist', sans-serif; */\r\n    font-size: 1.6rem;\r\n    color: ${props => props.theme.textColor};\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n\r\n  .desktopContainer {\r\n    max-width: 114rem;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .margin-r-l {\r\n    margin: 0 1.5rem;\r\n  }\r\n\r\n  .no-margin {\r\n    margin: 0;\r\n  }\r\n\r\n  .onlyMobile {\r\n    @media (min-width: 576px) {\r\n      display: none !important;\r\n    }\r\n  }\r\n`","import styled from \"styled-components\"\r\n\r\nexport const NavList = styled.ul`\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 70%;\r\n  z-index: 100;\r\n  margin: 0;\r\n  background: ${props => props.theme.mainThemeColor};\r\n  list-style: none;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  transform: translateX(100%);\r\n  transition: transform .3s;\r\n  &.open {\r\n    transform: translateX(0);\r\n  }\r\n  @media (min-width: 576px) {\r\n    margin-right: 2rem;\r\n    position: static;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n    transform: translateX(0);\r\n    z-index: 0;\r\n    \r\n  }\r\n  li {\r\n    &:first-of-type {\r\n      margin-top: 3rem;\r\n      @media (min-width: 576px) {\r\n        margin-top: 0;\r\n      }\r\n    }\r\n    margin-bottom: 1rem;\r\n    text-align: right;\r\n    font-size: 3rem;\r\n    \r\n    @media (min-width: 576px) {\r\n      margin-left: 2rem;\r\n      margin-bottom: 0;\r\n      position: static;\r\n      flex-direction: row;\r\n      transform: translateX(0);\r\n    }\r\n  }\r\n  \r\n  a, span, .closeMenu {\r\n    text-decoration: none;\r\n    color: ${props => props.theme.textColorWhite};\r\n  }\r\n  .closeMenu {\r\n    border: none;\r\n    background: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    font-size: inherit;\r\n    font-family: inherit;\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nexport const Backdrop = styled.div<{isOpen?: boolean}>`\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 90;\r\n  background: rgba(0,0,0,.6);\r\n  display: ${props => props.isOpen ? 'static' : 'none'};\r\n`","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useIsUserLogged } from '../hooks/useIsUserLogged'\r\n\r\nimport { NavList, Backdrop } from './styles/Nav'\r\n\r\ninterface Props {\r\n  isOpen: boolean\r\n  toggleNavOpen: () => void\r\n  handleLinkClick: (e: React.MouseEvent<HTMLAnchorElement>) => void\r\n}\r\n\r\nconst Nav: React.FC<Props> = ({ isOpen, toggleNavOpen, handleLinkClick }) => {\r\n  const userLogged = useIsUserLogged()\r\n\r\n  return (\r\n    <>\r\n      <Backdrop isOpen={isOpen} onClick={toggleNavOpen}/>\r\n      <NavList className={isOpen ? 'open' : ''} >\r\n        <li className=\"onlyMobile\">\r\n          <button onClick={toggleNavOpen} className=\"closeMenu\">Close</button>\r\n        </li>\r\n        {userLogged ? (\r\n          <>\r\n            <li>\r\n              <NavLink to=\"/\" onClick={handleLinkClick}>Expenses</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/user\" onClick={handleLinkClick}>User</NavLink>\r\n            </li>\r\n          </>\r\n\r\n        ) : null}\r\n        {!userLogged ? (\r\n          <>\r\n            <li>\r\n              <NavLink to=\"/login\" onClick={handleLinkClick}>Login</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/register\" onClick={handleLinkClick}>Register</NavLink>\r\n            </li>\r\n          </>\r\n\r\n        ) : null}\r\n        {/* <li>\r\n          <NavLink to=\"/\">Menu item 2</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/\">Menu item 3</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/\">Menu item 4</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/\">Menu item 5</NavLink>\r\n        </li> */}\r\n      </NavList>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","import styled from \"styled-components\";\r\n\r\nconst HeaderBox = styled.div<{ bottomAdditionalSpace: number }>`\r\n  max-height: 30rem;\r\n  background: ${props => props.theme.mainThemeColor};\r\n  margin: 0;\r\n  padding-bottom: ${props => props.bottomAdditionalSpace / 2}px;\r\n\r\n  h1 {\r\n    margin: 0;\r\n    padding: 1rem 1.5rem;\r\n    color: #fff;\r\n    font-weight: 300;\r\n    @media (min-width: 768px) {\r\n      /* padding: 2rem 1.5rem; */\r\n    }\r\n  }\r\n\r\n  p {\r\n    margin: 0;\r\n    padding: 1rem 1.5rem;\r\n    padding-bottom: 0rem;\r\n  }\r\n\r\n  .header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  .menuIconMobile {\r\n    cursor: pointer;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 3rem;\r\n    margin: 1.5rem 2rem;\r\n\r\n    span {\r\n      width: 100%;\r\n      height: 3px;\r\n      background: #fff;\r\n\r\n      &:not(:last-child) {\r\n        margin-bottom: .5rem;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default HeaderBox","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Nav from './Nav'\r\n\r\nimport HeaderBox from './styles/Header'\r\n\r\ninterface Props {\r\n  totalComponentHeight: number\r\n}\r\n\r\nconst Header: React.FC<Props> = ({ totalComponentHeight }) => {\r\n  const [navOpen, toggleNavOpen] = useState(false)\r\n  const handleNavToggling = () => {\r\n    if (navOpen) {\r\n      toggleNavOpen(false)\r\n      return\r\n    }\r\n    toggleNavOpen(true)\r\n  }\r\n  const handleLinkClick = (e: React.MouseEvent<HTMLAnchorElement>) => {\r\n    console.log(e)\r\n    if (navOpen === false) return\r\n    toggleNavOpen(false)\r\n    // if (e.currentTarget.localName.toLowerCase() === 'a') toggleNavOpen(false)\r\n  }\r\n  return (\r\n    <HeaderBox bottomAdditionalSpace={totalComponentHeight}>\r\n      <header className=\"desktopContainer header\">\r\n        <Link to=\"/\">\r\n          <h1>Budget</h1>\r\n        </Link>\r\n        <div className=\"menuIconMobile onlyMobile\" onClick={handleNavToggling}>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </div>\r\n        <Nav isOpen={navOpen} toggleNavOpen={handleNavToggling} handleLinkClick={handleLinkClick}/>\r\n      </header>\r\n    </HeaderBox>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import styled from 'styled-components'\r\n\r\nconst TotalBox = styled.div<{ boxSize?: number, totalAmountLength: number }>`\r\n  margin: 0 1.5rem;\r\n  margin-top: -${props => props?.boxSize ? props?.boxSize / 2 : 0}px;\r\n  margin-bottom: 1rem;\r\n  background: #fff;\r\n  box-shadow: 0px 2px 20px -10px #999;\r\n  border-radius: 10px;\r\n  padding: 1.2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  line-height: 1;\r\n\r\n  .header {\r\n    font-size: 1.5rem;\r\n    font-weight: 600;\r\n  }\r\n\r\n  .main {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  .total {\r\n    font-size: 4.5rem;\r\n    \r\n    color: ${props => props.theme.mainThemeColor};\r\n    @media (max-width: 576px) {\r\n      font-size: ${props => 4.5 / 100 * (100 - props.totalAmountLength * 3)}rem;\r\n    }\r\n  }\r\n\r\n  .link {\r\n    cursor: pointer;\r\n    background: ${props => props.theme.mainThemeColor};\r\n    padding: 3rem;\r\n    border-radius: 50%; \r\n    position: relative;\r\n    & span {\r\n      color: #fff;\r\n      font-size: 4rem;\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  }\r\n\r\n  .today {\r\n    font-size: 1.6rem;\r\n    font-weight: 400;\r\n  }\r\n`\r\n\r\nexport default TotalBox","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { calculateTotal, calculateTodayExpenses } from '../lib/calcMoney'\r\nimport formatMoney from '../lib/formatMoney'\r\n\r\nimport { selectUserSettings } from '../store/selectors/user'\r\nimport { selectAllExpenses } from '../store/selectors/expenses'\r\n\r\nimport TotalBox from './styles/TotalBox'\r\nimport { RootState } from '../store'\r\nimport { IUserSettings } from '../interfaces/user'\r\nimport { IExpense } from '../interfaces/expense'\r\n\r\ninterface Props {\r\n  totalComponentHeight: number\r\n  setTotalComponentHeight: (height: number) => void\r\n}\r\n\r\nconst Total: React.FC<Props> = ({ totalComponentHeight, setTotalComponentHeight }) => {\r\n  const [totalAmount, setTotalAmount] = useState(0)\r\n  const [todayAmount, setTodayAmount] = useState(0)\r\n  const expenses = useSelector<RootState, IExpense[]>(selectAllExpenses)\r\n  const { currency, locale } = useSelector<RootState, IUserSettings>(selectUserSettings)\r\n  const boxRef = useRef<HTMLDivElement>(null)\r\n\r\n  useEffect(() => {\r\n    const totalAmountCalc = calculateTotal(expenses)\r\n    const todayExpense = calculateTodayExpenses(expenses)\r\n    setTotalAmount(totalAmountCalc)\r\n    setTodayAmount(todayExpense)\r\n  }, [expenses])\r\n  \r\n  useEffect(() => {\r\n    if (!boxRef.current?.clientHeight) return\r\n    setTotalComponentHeight(boxRef.current?.clientHeight)\r\n  }, [])\r\n\r\n  // console.log(totalComponentHeight)\r\n  \r\n  return (\r\n    <TotalBox ref={boxRef} boxSize={totalComponentHeight} totalAmountLength={totalAmount.toString().length}>\r\n      <p className=\"header\">Total</p>\r\n      <div className=\"main\">\r\n        <div className=\"total\">\r\n          {formatMoney(totalAmount, currency, locale)}\r\n        </div>\r\n        <Link to='/addExpense' className=\"link\">\r\n          <span>+</span>\r\n        </Link>\r\n      </div>\r\n      <p className=\"today\">\r\n        {formatMoney(todayAmount, currency, locale)} today\r\n      </p>\r\n    </TotalBox>\r\n  )\r\n}\r\n\r\nexport default Total\r\n","import { isToday } from 'date-fns'\r\nimport { IExpense } from '../interfaces/expense'\r\n\r\nexport const calculateTotal = (expenses: IExpense[]): number => expenses.reduce((acc, item) => {\r\n  return acc += item.amount\r\n}, 0)\r\n\r\nexport const calculateTodayExpenses = (expenses: IExpense[]): number => expenses.reduce((acc, item) => {\r\n  if (isToday(new Date(item.expenseDate))) {\r\n    return acc += item.amount\r\n  }\r\n  return acc\r\n}, 0)","import { useEffect, useState } from 'react'\r\nimport jwt_decode from 'jwt-decode'\r\nimport { Route, Redirect, Switch, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { ThemeProvider } from 'styled-components'\r\n\r\n\r\nimport { setExpenses, clearExpenses } from './store/actions/expenses'\r\nimport { clearUser, getUserData } from './store/actions/user'\r\nimport setAuthToken from './lib/setAuthToken'\r\n\r\nimport Register from './pages/register'\r\nimport Login from './pages/login'\r\nimport AddExpense from './pages/addExpense'\r\nimport EditExpense from './pages/editExpense'\r\nimport Expenses from './pages/expenses'\r\nimport Expense from './pages/expense'\r\nimport User from './pages/user'\r\nimport ResetPassword from './pages/resetPassword'\r\nimport Notifications from './components/Notifications'\r\n\r\nimport { GlobalStyle } from './components/styles/globalStyles'\r\nimport { getTheme } from './components/styles/theme'\r\nimport Header from './components/Header'\r\nimport Total from './components/Total'\r\nimport { selectNotifications } from './store/selectors/ui'\r\nimport { useIsUserLogged } from './hooks/useIsUserLogged'\r\n// import { selectUserData } from './store/selectors/user'\r\n// import { showNotification } from './store/actions/ui'\r\n\r\nfunction App() {\r\n  const [totalComponentHeight, setTotalComponentHeight] = useState(0)\r\n  const [firstLoading, setFirstLoading] = useState(true)\r\n  const history = useHistory()\r\n  const notifications = useSelector(selectNotifications)\r\n  const userLogged = useIsUserLogged()\r\n  const dispatch = useDispatch()\r\n\r\n  const [themeId, changeThemeId] = useState(() => {\r\n    const themeIdFromLS = localStorage.getItem('theme')\r\n    if (themeIdFromLS) return themeIdFromLS\r\n    return 'violet'\r\n  })\r\n  \r\n  useEffect(() => {\r\n    getJwtFromLS()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log(userLogged)\r\n    if (!userLogged) {\r\n      setTotalComponentHeight(0)\r\n    }\r\n  }, [userLogged])\r\n\r\n  \r\n  const getJwtFromLS = () => {\r\n    const token = localStorage.getItem('jwtToken')\r\n    // console.log(token)\r\n    if (token) {\r\n      const decoded = jwt_decode(token)\r\n      console.log(decoded)\r\n      setAuthToken(token)\r\n      dispatch(setExpenses())\r\n      dispatch(getUserData())\r\n      setFirstLoading(false)\r\n      // setUserExists(true)\r\n    } else {\r\n      dispatch(clearUser())\r\n      dispatch(clearExpenses())\r\n      // setUserExists(false)\r\n    }\r\n  }\r\n\r\n  const changeAppTheme = (themeId: string) => {\r\n    localStorage.setItem('theme', themeId)\r\n    changeThemeId(themeId)\r\n  }\r\n\r\n  const setTotalComponentHeightFunc = (height?: number) => {\r\n    if (!height) return \r\n    setTotalComponentHeight(height)\r\n  }\r\n  return (\r\n    \r\n      <ThemeProvider theme={() => getTheme(themeId)} >\r\n        <GlobalStyle />\r\n\r\n          <Header totalComponentHeight={totalComponentHeight}/>\r\n          <div className=\"desktopContainer\">\r\n          <Switch>\r\n            {!userLogged ? (\r\n              <>\r\n                <Route path=\"/register\" exact>\r\n                  <Register />\r\n                </Route>\r\n\r\n                <Route path=\"/login\" exact>\r\n                  <Login />\r\n                </Route>\r\n                <Route path=\"/resetPassword\" exact>\r\n                  <ResetPassword />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <Redirect to=\"/login\" />\r\n                  {/* maybe add landing page in the future? */}\r\n                </Route>\r\n              </>\r\n            ) : (\r\n              null\r\n            )}\r\n\r\n            <Route path=\"/\">\r\n              {/* redirect to expenses page immediately */}\r\n              {userLogged ? (\r\n                <>\r\n                  <Total totalComponentHeight={totalComponentHeight} setTotalComponentHeight={setTotalComponentHeightFunc}/>\r\n                  <Switch>\r\n\r\n                  <Route path=\"/user\" >\r\n                    <User changeAppTheme={changeAppTheme} themeId={themeId} />\r\n                  </Route>\r\n                  <Route path=\"/addExpense\" exact>\r\n                    <AddExpense/>\r\n                  </Route>\r\n                  <Route path=\"/expenses/:expenseId\" exact>\r\n                    <Expense />\r\n                  </Route>\r\n                  <Route path=\"/expenses/edit/:expenseId\" exact>\r\n                    <EditExpense />\r\n                  </Route>\r\n                  <Route path=\"/expenses\" exact>\r\n                    <Expenses />\r\n                  </Route>\r\n                  <Route path=\"/\">\r\n                    <Redirect to=\"expenses\" />\r\n                  </Route>\r\n                </Switch>\r\n                </>\r\n              ) : <Redirect to=\"/register\" />}\r\n\r\n            \r\n            </Route>\r\n          </Switch>\r\n          {/* <button onClick={e => dispatch(showNotification('message'))}>Add</button> */}\r\n          {notifications && <Notifications notifications={notifications} />}\r\n          </div> \r\n\r\n      </ThemeProvider>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { EActionTypes } from '../actions/actionTypes'\r\nimport { TAction  } from '../actions/interface'\r\nimport { IExpense } from '../../interfaces/expense'\r\nconst initialState = {\r\n  // loading: false,\r\n  // error: '',\r\n  expenses: [\r\n    {\r\n    _id: '603e8a3bc4e77e04d869c708',\r\n    title: 'Pizza',\r\n    amount: 4000,\r\n    description: '123',\r\n    owner: '603d436854bb723cac11917a',\r\n    createdAt: '2021-03-02T18:55:55.542Z',\r\n    updatedAt: '2021-03-02T18:55:55.542Z',\r\n    expenseDate: '2021-03-02T18:55:55.542Z',\r\n    category: 'other',\r\n    __v: 0\r\n  }, {\r\n    _id: '603e8a3bc4e77e04d869c709',\r\n    title: 'Second Pizza',\r\n    amount: 4230,\r\n    description: 'Note',\r\n    owner: '603d436854bb723cac11917a',\r\n    createdAt: '2021-03-12T18:55:55.542Z',\r\n    updatedAt: '2021-03-12T18:55:55.542Z',\r\n    expenseDate: '2021-03-12T18:55:55.542Z',\r\n    category: 'other',\r\n  }\r\n]\r\n}\r\n\r\nexport interface IExpenseState {\r\n  expenses: IExpense[]\r\n}\r\n\r\nconst expenseReducer = (state: IExpenseState = initialState, action: TAction): IExpenseState => {\r\n  switch (action.type) {\r\n    case EActionTypes.SET_EXPENSES:\r\n      return {\r\n        expenses: action.payload\r\n      }\r\n    case EActionTypes.ADD_EXPENSE:\r\n      return {\r\n        expenses: [...state.expenses, action.payload]\r\n      }\r\n    case EActionTypes.REMOVE_EXPENSE:\r\n      const filteredExpenses = state.expenses.filter(item => item._id !== action.payload)\r\n      return {\r\n        expenses: filteredExpenses\r\n      }\r\n    case EActionTypes.EDIT_EXPENSE:\r\n      const mappedExpenses = state.expenses.map(item => {\r\n        if (item._id === action.payload._id) {\r\n          return action.payload\r\n        }\r\n        return item\r\n      })\r\n      return {\r\n        expenses: mappedExpenses\r\n      }\r\n    case EActionTypes.CLEAR_EXPENSES:\r\n      return {\r\n        expenses: [],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default expenseReducer","import { EActionTypes } from '../actions/actionTypes'\r\nimport { TAction  } from '../actions/interface'\r\nimport { IUserData } from '../../interfaces/user'\r\n\r\nconst initialState = {\r\n  userData: {\r\n    settings: {\r\n      currency: 'USD',\r\n      locale: 'en-US'\r\n    }\r\n  }\r\n}\r\n\r\nexport interface IUserState {\r\n  userData: IUserData\r\n}\r\n\r\nconst userReducer = (state: IUserState = initialState, action: TAction) => {\r\n  switch(action.type) {\r\n    case EActionTypes.SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        userData: action.payload\r\n      }\r\n    case EActionTypes.CLEAR_USER:\r\n      return initialState\r\n    case EActionTypes.CHANGE_CURRENCY:\r\n      return {\r\n        ...state,\r\n        userData: {\r\n          ...state.userData,\r\n          settings: action.payload\r\n        }\r\n      }\r\n    case EActionTypes.CHANGE_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        userData: {\r\n          ...state.userData,\r\n          categories: action.payload\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default userReducer","import { EActionTypes } from '../actions/actionTypes'\r\nimport { TAction  } from '../actions/interface'\r\nimport { IFilter, IApiCallState, INotification } from '../../interfaces/ui'\r\nimport { apiCallsNames as api } from '../../config/config'\r\n\r\nexport interface IUiState {\r\n  apiCalls: IApiCallState[]\r\n  notifications: INotification[]\r\n  filter: IFilter\r\n}\r\n\r\nconst initialState: IUiState = {\r\n  apiCalls: [\r\n    { name: api.saveNewExpense, loading: false, error: {} },\r\n    { name: api.saveEditExpense, loading: false, error: {} },\r\n    { name: api.removeExpense, loading: false, error: {} },\r\n    { name: api.saveCurrency, loading: false, error: {} },\r\n    { name: api.removeCategory, loading: false, error: {} },\r\n    { name: api.fetchExpenses, loading: false, error: {} },\r\n    { name: api.fetchUser, loading: false, error: {} },\r\n    { name: api.loginUser, loading: false, error: {} },\r\n    { name: api.registerUser, loading: false, error: {} },\r\n    { name: api.resetPassword, loading: false, error: {} },\r\n  ],\r\n  filter: {\r\n    search: '',\r\n    dateRangeStart: '',\r\n    dateRangeEnd: '',\r\n    sortBy: 'DATE',\r\n    sortDirection: 'ASC',\r\n    category: ''\r\n  },\r\n  notifications: []\r\n}\r\n\r\nconst uiReducer = (state: IUiState = initialState, action: TAction) => {\r\n  switch(action.type) {\r\n    case EActionTypes.API_CALL_START:\r\n      return {\r\n        ...state,\r\n        apiCalls: state.apiCalls.map(item => {\r\n          if (item.name !== action.payload.name) { return item }\r\n          return {\r\n            ...item,\r\n            loading: true,\r\n            successMessage: '',\r\n            error: ''\r\n          }\r\n        })\r\n      }\r\n    case EActionTypes.CLEAR_API_CALL:\r\n      return {\r\n        ...state,\r\n        apiCalls: state.apiCalls.map(item => {\r\n          if (item.name !== action.payload.name) { return item }\r\n          return {\r\n            ...item,\r\n            loading: false,\r\n            successMessage: '',\r\n            error: ''\r\n          }\r\n        })\r\n      }\r\n    case EActionTypes.API_CALL_FINISH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        apiCalls: state.apiCalls.map(item => {\r\n          if (item.name !== action.payload.name) { return item }\r\n          return {\r\n            ...item,\r\n            name: action.payload.name,\r\n            loading: false,\r\n            successMessage: action.payload.successMessage,\r\n            error: ''\r\n          }\r\n        })\r\n      }\r\n    case EActionTypes.API_CALL_FINISH_FAIL:\r\n      return {\r\n        ...state,\r\n        apiCalls: state.apiCalls.map(item => {\r\n          if (item.name !== action.payload.name) { return item }\r\n          return {\r\n            ...item,\r\n            name: action.payload.name,\r\n            loading: false,\r\n            successMessage: '',\r\n            error: {\r\n              message: action.payload.error?.message,\r\n              errorData: action.payload.error?.response?.data\r\n            }\r\n          }\r\n        })\r\n      }\r\n    case EActionTypes.UPDATE_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: {\r\n          ...state.filter,\r\n          ...action.payload\r\n        }\r\n      }\r\n    case EActionTypes.ADD_NOTIFICATION: \r\n      return {\r\n        ...state,\r\n        notifications: [...state.notifications, action.payload]\r\n      }\r\n    case EActionTypes.REMOVE_NOTIFICATION: \r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.filter(item => item.id !== action.payload )\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default uiReducer","import {combineReducers} from 'redux'\r\nimport expenseReducer, { IExpenseState } from './expenses'\r\nimport userReducer, { IUserState } from './user'\r\nimport uiReducer, { IUiState } from './ui'\r\n\r\nconst rootReducer = combineReducers<{\r\n  expenses: IExpenseState,\r\n  user: IUserState,\r\n  ui: IUiState | any\r\n}>({\r\n  expenses: expenseReducer,\r\n  user: userReducer,\r\n  ui: uiReducer,\r\n})\r\n\r\nexport default rootReducer\r\n\r\nexport type TRootState = ReturnType<typeof rootReducer>","import { createStore, applyMiddleware } from \"redux\"\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport rootReducer from \"./reducers\"\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\"\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}